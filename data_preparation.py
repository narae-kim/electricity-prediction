import pandas as pd
import datetime


def read_csv_data(filename):
    file = open(filename, 'rt')
    return pd.read_csv(file, sep=',')


def convert_time(d, p):
    h = int(p / 2)
    m = (p % 2) * 30
    return datetime.datetime.combine(datetime.date.fromisoformat(d), datetime.time(h, m))


# UK bank holidays
holidays_data = read_csv_data('smart-meters-in-london/uk_bank_holidays.csv')

# information of households
households_data = read_csv_data('smart-meters-in-london/informations_households.csv')

# weather info
weather_data = read_csv_data('smart-meters-in-london/weather_hourly_darksky.csv')
weather_data['time'] = pd.to_datetime(weather_data['time'])
weather_data = weather_data[
    ['time', 'visibility', 'windBearing', 'temperature', 'dewPoint', 'pressure', 'apparentTemperature', 'windSpeed',
     'precipType', 'icon', 'humidity', 'summary']]
# sort by time as ascending
weather_data.sort_values(by=['time'], inplace=True, ascending=True, ignore_index=True)

# hourly data -> half-hourly data: copy the prev data for the data in 30 minutes
processed_weather_data = pd.concat([weather_data] * 2, ignore_index=True)
processed_weather_data.loc[21165:, 'time'] = processed_weather_data[21165:].apply(
    lambda x: x['time'] + datetime.timedelta(minutes=30), axis=1)

# energy consumption
# block_0 to 111
for i in range(112):
    energy_data = read_csv_data('smart-meters-in-london/hhblock_dataset/hhblock_dataset/block_' + str(i) + '.csv')
    combined_data = energy_data.copy()

    # if bank holiday then 1, otherwise 0
    combined_data['holiday'] = pd.Series(0, index=combined_data.index)
    for holiday in holidays_data['Bank holidays']:
        combined_data.loc[combined_data['day'] == holiday, 'holiday'] = 1

    # wide format -> long format
    combined_data['id'] = combined_data.index
    combined_data_long = pd.wide_to_long(combined_data, stubnames='hh', i='id', j='period', sep='_')

    combined_data_long['time'] = combined_data_long.index.get_level_values('period')
    combined_data_long['time'] = combined_data_long.apply(lambda x: convert_time(x['day'], x['time']), axis=1)

    # replace the index generated by wide_to_long with the integer index
    combined_data_long.reset_index(drop=True, inplace=True)

    # filter data & rename 'hh' to 'energy'
    data = combined_data_long.filter(['holiday', 'LCLid', 'hh', 'time'], axis=1)
    data.columns = ['holiday', 'LCLid', 'energy', 'time']

    # merge data with processed_weather_data
    data = pd.merge(data, processed_weather_data, how='outer', on='time')
    data = pd.merge(data, households_data, how='right', on='LCLid')
    data = data[data['energy'].notna()]

    # sort by time as ascending
    data.sort_values(by=['time'], inplace=True, ascending=True, ignore_index=True)

    print(data['time'])
    if data.isnull().any().any():
        data.fillna(method='ffill', inplace=True)  # nan to forward fill
        print("changed", data.isnull().any().any())
    print(data.isnull().any().any())
    file_name = 'processed/processedData_' + str(i) + '.csv'
    data.to_csv(file_name, index=False)
